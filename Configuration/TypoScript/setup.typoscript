plugin.tx_typo3blog.singlePid = 0
plugin.tx_typo3blog.listPid = 0
plugin.tx_typo3blog_latest.persistence.storagePid = 0
plugin.tx_typo3blog_list.persistence.storagePid = 0
plugin.tx_typo3blog_show.persistence.storagePid = 0

plugin.tx_typo3blog_latest {
    view {
        templateRootPaths.0 = EXT:typo3_blog/Resources/Private/Templates/
        templateRootPaths.1 = {$plugin.tx_typo3blog_latest.view.templateRootPath}
        partialRootPaths.0 = EXT:typo3_blog/Resources/Private/Partials/
        partialRootPaths.1 = {$plugin.tx_typo3blog_latest.view.partialRootPath}
        layoutRootPaths.0 = EXT:typo3_blog/Resources/Private/Layouts/
        layoutRootPaths.1 = {$plugin.tx_typo3blog_latest.view.layoutRootPath}
    }
    persistence {
        storagePid = {$plugin.tx_typo3blog_latest.persistence.storagePid}
        #recursive = 1
    }
    features {
        #skipDefaultArguments = 1
        # if set to 1, the enable fields are ignored in BE context
        ignoreAllEnableFieldsInBe = 0
    }
    mvc {
        #callDefaultActionIfActionCantBeResolved = 1
    }
    settings {
        listPid = 0
        singlePid = 0
    }
}
plugin.tx_typo3blog_list {
    view {
        templateRootPaths.0 = EXT:typo3_blog/Resources/Private/Templates/
        templateRootPaths.1 = {$plugin.tx_typo3blog_list.view.templateRootPath}
        partialRootPaths.0 = EXT:typo3_blog/Resources/Private/Partials/
        partialRootPaths.1 = {$plugin.tx_typo3blog_list.view.partialRootPath}
        layoutRootPaths.0 = EXT:typo3_blog/Resources/Private/Layouts/
        layoutRootPaths.1 = {$plugin.tx_typo3blog_list.view.layoutRootPath}
    }
    persistence {
        storagePid = {$plugin.tx_typo3blog_list.persistence.storagePid}
        #recursive = 1
    }
    features {
        #skipDefaultArguments = 1
        # if set to 1, the enable fields are ignored in BE context
        ignoreAllEnableFieldsInBe = 0
    }
    mvc {
        #callDefaultActionIfActionCantBeResolved = 1
    }
    settings {
        listPid = 0
        singlePid = 0
    }
}
plugin.tx_typo3blog_show {
    view {
        templateRootPaths.0 = EXT:typo3_blog/Resources/Private/Templates/
        templateRootPaths.1 = {$plugin.tx_typo3blog_show.view.templateRootPath}
        partialRootPaths.0 = EXT:typo3_blog/Resources/Private/Partials/
        partialRootPaths.1 = {$plugin.tx_typo3blog_show.view.partialRootPath}
        layoutRootPaths.0 = EXT:typo3_blog/Resources/Private/Layouts/
        layoutRootPaths.1 = {$plugin.tx_typo3blog_show.view.layoutRootPath}
    }
    persistence {
        storagePid = {$plugin.tx_typo3blog_show.persistence.storagePid}
        #recursive = 1
    }
    features {
        #skipDefaultArguments = 1
        # if set to 1, the enable fields are ignored in BE context
        ignoreAllEnableFieldsInBe = 0
    }
    settings {
        listPid = 0
        singlePid = 0
    }
    mvc {
        #callDefaultActionIfActionCantBeResolved = 1
    }
}



// ------------------------------------------------
// render links to typo3_blog entries defined in
// rte links (tab "Typo3Blog")
// ------------------------------------------------
config.recordLinks.linkToTypo3BlogEntries {
    // Do not force link generation when the record is hidden
    forceLink = 0
    typolink {
        parameter = {$plugin.tx_typo3blog.singlePid}
        additionalParams.data = field:uid
        additionalParams.wrap = &tx_typo3blog_show[post]=|&tx_typo3blog_show[controller]=Post&tx_typo3blog_show[action]=show
    }
}


// ------------------------------------------------
// sitemap for blog posts
// ------------------------------------------------
plugin.tx_seo {
    config {
        xmlSitemap {
            sitemaps {
                posts {
                    provider = TYPO3\CMS\Seo\XmlSitemap\RecordsXmlSitemapDataProvider
                    config {
                        table = tx_typo3blog_domain_model_post
                        sortField = sorting
                        lastModifiedField = tstamp
                        recursive = 4
                        pid = {$plugin.tx_typo3blog.storagePid}
                        url {
                            pageId = {$plugin.tx_typo3blog.singlePid}
                            fieldToParameterMap {
                                uid = tx_typo3blog_show[post]
                            }
                            additionalGetParameters {
                                tx_typo3blog_show.controller = Post
                                tx_typo3blog_show.action = show
                            }
                        }
                    }
                }
            }
        }
    }
}